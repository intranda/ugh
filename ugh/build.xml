<?xml version="1.0"?>
<project name="UGH" default="dist" xmlns:artifact="urn:maven-artifact-ant">

	<!-- Distribution specific settings. -->
	<property name="dist.name" value="ugh" />
	<property name="dist.version" value="3.0" />
    <property name="jar.name" value="${dist.name}-${dist.version}.jar" />

	<!-- Directory settings -->
	<property name="dir.lib" value="./lib" />
	<property name="dir.build" location="./build" />
	<property name="dir.build.src" location="${dir.build}/src" />
	<property name="dir.src" location="./src" />
	<!-- Check Versions? Disable only for development! -->
	<!-- Comment the property decleration out, since stupid ant isn't checking the the value. -->
	<property name="check.versions" value="true" />





	<path id="classpath">
		<fileset dir="${dir.lib}" />
	</path>


	<!-- Clean up generated and compiled files. -->
	<target name="clean" description="Clean up generated and compiled files.">
		<delete dir="${dir.build}" />
	</target>

	<!-- Create needed directories -->
	<target name="createDirs" description="Create needed directories">
		<mkdir dir="${dir.build}" />
		<property name="dir.build.classes" value="${dir.build}/classes" />
		<mkdir dir="${dir.build.classes}" />
		<mkdir dir="${dir.build.src}" />
	</target>








	<!-- copy sources to build directory -->
	<target name="copySources" description="Copy the sources to the build directory">
		<copy todir="${dir.build.src}">
			<fileset dir="${dir.src}" />
		</copy>
	</target>

	<!-- Normal build of application. 
	<target name="compile" depends="writeVersion" description="Normal build of application.">
	-->
	<target name="compile" depends="copySources, createDirs, writeVersion" description="Normal build of application.">

		<javac srcdir="${dir.build.src}" destdir="${dir.build.classes}" target="1.7" source="1.7" includeantruntime="false" encoding="UTF8"  debug="true" debuglevel="lines,vars,source" >
			<compilerarg value="-Xlint" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<!-- Build of war file. -->
	<target name="jar" depends="compile" description="Build of war file.">
		<jar destfile="${jar.name}" basedir="${dir.build.classes}">
		</jar>
		<delete dir="${dir.build}" />
	</target>


	<!-- Build single war file. -->
	<target name="dist" depends="clean, jar" description="Build single war file.">
		<echo>Alles ist gut</echo>
	</target>

	<!-- Build all, not really needed yet. -->
	<target name="all" depends="dist" description="Build all, not really needed yet." />



	<target name="git.revision" description="Store git revision in ${repository.version}" >
	    <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="" >
	        <arg value="describe"/>
	        <arg value="--tags"/>
	        <arg value="--always"/>
	        <arg value="HEAD"/>
	    </exec>
	    <condition property="repository.version" value="${git.revision}" else="unknown">
	        <and>
	            <isset property="git.revision"/>
	            <length string="${git.revision}" trim="yes" length="0" when="greater"/>
	        </and>
	    </condition>
	</target>

	<!-- rewrite the Version file with informations from the build system, not used yet-->
	<target name="writeVersion" depends="git.revision" description="writes the build version">
		<tstamp>
		<format property="date" pattern="dd−MMMM−yyyy" locale="en" />
		</tstamp>
		<echo file="${dir.build.src}/ugh/Version.java">
			package ugh;
			/*
			DO NOT CHANGE THIS FILE, IT'S GENERATED BY ANT!
			*/
			public class Version {
				public final static String VERSION = "${dist.name}";
				public final static String BUILDVERSION = "${dist.name}-${dist.version}-${git.revision}";
				public final static String BUILDDATE = "${date}";
				public static String PROGRAMNAME = "Goobi";
			}
		</echo>
	</target>
</project>